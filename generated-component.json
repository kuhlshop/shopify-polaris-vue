{
  "vueComponent": "<template>\n  <s-datepicker\n    :allow=\"allow\"\n    :allow-days=\"allowDays\"\n    :default-value=\"defaultValue\"\n    :default-view=\"defaultView\"\n    :disallow=\"disallow\"\n    :disallow-days=\"disallowDays\"\n    :name=\"name\"\n    :type=\"type\"\n    :value=\"value\"\n    :view=\"view\"\n    @blur=\"$emit('blur', $event)\"\n    @change=\"$emit('change', $event)\"\n    @focus=\"$emit('focus', $event)\"\n    @input=\"$emit('input', $event)\"\n    @viewchange=\"$emit('viewchange', $event)\"\n  >\n    <slot />\n  </s-datepicker>\n</template>\n\n<script setup lang=\"ts\">\ntype DatePickerType = \"single\" | \"range\";\n\ninterface Props {\n  allow?: string;\n  allowDays?: string;\n  defaultValue?: string;\n  defaultView?: string;\n  disallow?: string;\n  disallowDays?: string;\n  name?: string;\n  type?: DatePickerType;\n  value?: string;\n  view?: string;\n}\n\ndefineProps<Props>();\n\ndefineEmits<{\n  blur: [event: Event];\n  change: [event: Event];\n  focus: [event: Event];\n  input: [event: Event];\n  viewchange: [event: Event];\n}>();\n</script>",
  "testFile": "import { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\nimport Sdatepicker from \"../index.vue\";\n\ndescribe(\"Sdatepicker\", () => {\n  it(\"renders properly\", () => {\n    const wrapper = mount(Sdatepicker, {\n      slots: {\n        default: \"Test Content\"\n      }\n    });\n    expect(wrapper.text()).toContain(\"Test Content\");\n  });\n\n  it(\"passes props to the web component\", async () => {\n    const wrapper = mount(Sdatepicker, {\n      props: {\n        type: \"range\",\n        value: \"2024-01-01--2024-01-31\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-datepicker\");\n    expect(webComponent.exists()).toBe(true);\n    expect(webComponent.attributes(\"type\")).toBe(\"range\");\n    expect(webComponent.attributes(\"value\")).toBe(\"2024-01-01--2024-01-31\");\n  });\n\n  it(\"passes allow prop\", async () => {\n    const wrapper = mount(Sdatepicker, {\n      props: {\n        allow: \"2024-06-01--2024-06-30\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-datepicker\");\n    expect(webComponent.attributes(\"allow\")).toBe(\"2024-06-01--2024-06-30\");\n  });\n\n  it(\"passes disallow prop\", async () => {\n    const wrapper = mount(Sdatepicker, {\n      props: {\n        disallow: \"past\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-datepicker\");\n    expect(webComponent.attributes(\"disallow\")).toBe(\"past\");\n  });\n\n  it(\"emits blur event\", async () => {\n    const wrapper = mount(Sdatepicker);\n    const webComponent = wrapper.find(\"s-datepicker\");\n    \n    await webComponent.trigger(\"blur\");\n    expect(wrapper.emitted(\"blur\")).toBeTruthy();\n  });\n\n  it(\"emits change event\", async () => {\n    const wrapper = mount(Sdatepicker);\n    const webComponent = wrapper.find(\"s-datepicker\");\n    \n    await webComponent.trigger(\"change\");\n    expect(wrapper.emitted(\"change\")).toBeTruthy();\n  });\n\n  it(\"emits focus event\", async () => {\n    const wrapper = mount(Sdatepicker);\n    const webComponent = wrapper.find(\"s-datepicker\");\n    \n    await webComponent.trigger(\"focus\");\n    expect(wrapper.emitted(\"focus\")).toBeTruthy();\n  });\n\n  it(\"emits input event\", async () => {\n    const wrapper = mount(Sdatepicker);\n    const webComponent = wrapper.find(\"s-datepicker\");\n    \n    await webComponent.trigger(\"input\");\n    expect(wrapper.emitted(\"input\")).toBeTruthy();\n  });\n\n  it(\"emits viewchange event\", async () => {\n    const wrapper = mount(Sdatepicker);\n    const webComponent = wrapper.find(\"s-datepicker\");\n    \n    await webComponent.trigger(\"viewchange\");\n    expect(wrapper.emitted(\"viewchange\")).toBeTruthy();\n  });\n});"
}