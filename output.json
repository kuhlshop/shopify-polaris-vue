{
  "vueComponent": "<template>\n  <s-orderedlist>\n    <slot />\n  </s-orderedlist>\n</template>\n\n<script setup lang=\"ts\">\n// Props interface (none defined for this component)\ninterface Props {}\n\ndefineProps<Props>();\n</script>\n",
  "testFile": "import { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\nimport Sorderedlist from \"../index.vue\";\n\ndescribe(\"Sorderedlist\", () => {\n  it(\"renders properly\", () => {\n    const wrapper = mount(Sorderedlist, {\n      slots: {\n        default: \"<s-list-item>Test Item 1</s-list-item><s-list-item>Test Item 2</s-list-item>\"\n      }\n    });\n    expect(wrapper.html()).toContain(\"s-orderedlist\");\n  });\n\n  it(\"renders the web component\", () => {\n    const wrapper = mount(Sorderedlist, {\n      slots: {\n        default: \"<s-list-item>Test Content</s-list-item>\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-orderedlist\");\n    expect(webComponent.exists()).toBe(true);\n  });\n\n  it(\"passes slot content to the web component\", () => {\n    const testContent = \"<s-list-item>Red shirt</s-list-item><s-list-item>Blue shirt</s-list-item>\";\n    const wrapper = mount(Sorderedlist, {\n      slots: {\n        default: testContent\n      }\n    });\n    \n    expect(wrapper.html()).toContain(\"s-list-item\");\n  });\n\n  it(\"supports nested ordered lists\", () => {\n    const wrapper = mount(Sorderedlist, {\n      slots: {\n        default: `\n          <s-list-item>\n            Main item\n            <s-orderedlist>\n              <s-list-item>Sub item</s-list-item>\n            </s-orderedlist>\n          </s-list-item>\n        `\n      }\n    });\n    \n    expect(wrapper.html()).toContain(\"s-orderedlist\");\n    expect(wrapper.html()).toContain(\"s-list-item\");\n  });\n});\n"
}