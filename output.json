{
  "vueComponent": "<template>\n  <s-divider\n    :color=\"color\"\n    :direction=\"direction\"\n  >\n    <slot />\n  </s-divider>\n</template>\n\n<script setup lang=\"ts\">\n// Type definitions for union types\ntype Color = \"base\" | \"strong\";\ntype Direction = \"inline\" | \"block\";\n\n// Props interface\ninterface Props {\n  color?: Color;\n  direction?: Direction;\n}\n\ndefineProps<Props>();\n</script>\n",
  "testFile": "import { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\nimport Sdivider from \"../index.vue\";\n\ndescribe(\"Sdivider\", () => {\n  it(\"renders properly\", () => {\n    const wrapper = mount(Sdivider);\n    const webComponent = wrapper.find(\"s-divider\");\n    expect(webComponent.exists()).toBe(true);\n  });\n\n  it(\"passes props to the web component\", async () => {\n    const wrapper = mount(Sdivider, {\n      props: {\n        color: \"strong\",\n        direction: \"block\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-divider\");\n    expect(webComponent.exists()).toBe(true);\n    expect(webComponent.attributes(\"color\")).toBe(\"strong\");\n    expect(webComponent.attributes(\"direction\")).toBe(\"block\");\n  });\n\n  it(\"renders with default props\", () => {\n    const wrapper = mount(Sdivider);\n    const webComponent = wrapper.find(\"s-divider\");\n    expect(webComponent.exists()).toBe(true);\n  });\n\n  it(\"passes color prop\", () => {\n    const wrapper = mount(Sdivider, {\n      props: {\n        color: \"strong\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-divider\");\n    expect(webComponent.attributes(\"color\")).toBe(\"strong\");\n  });\n\n  it(\"passes direction prop\", () => {\n    const wrapper = mount(Sdivider, {\n      props: {\n        direction: \"block\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-divider\");\n    expect(webComponent.attributes(\"direction\")).toBe(\"block\");\n  });\n});\n"
}