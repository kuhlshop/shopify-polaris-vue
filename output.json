{
  "vueComponent": "<template>\n  <s-thumbnail\n    :alt=\"alt\"\n    :size=\"size\"\n    :src=\"src\"\n    @error=\"$emit('error', $event)\"\n    @load=\"$emit('load', $event)\"\n  >\n    <slot />\n  </s-thumbnail>\n</template>\n\n<script setup lang=\"ts\">\n// Type definitions for union types\ntype ThumbnailSize = \"small\" | \"small-200\" | \"small-100\" | \"base\" | \"large\" | \"large-100\";\n\n// Props interface\ninterface Props {\n  alt?: string;\n  size?: ThumbnailSize;\n  src?: string;\n}\n\ndefineProps<Props>();\n\n// Events\ndefineEmits<{\n  error: [event: Event];\n  load: [event: Event];\n}>();\n</script>",
  "testFile": "import { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\nimport Sthumbnail from \"../index.vue\";\n\ndescribe(\"Sthumbnail\", () => {\n  it(\"renders properly\", () => {\n    const wrapper = mount(Sthumbnail, {\n      slots: {\n        default: \"Test Content\"\n      }\n    });\n    expect(wrapper.text()).toContain(\"Test Content\");\n  });\n\n  it(\"passes props to the web component\", async () => {\n    const wrapper = mount(Sthumbnail, {\n      props: {\n        alt: \"White sneakers\",\n        src: \"https://cdn.shopify.com/static/images/polaris/thumbnail-wc_src.jpg\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-thumbnail\");\n    expect(webComponent.exists()).toBe(true);\n  });\n\n  it(\"passes alt prop to the web component\", () => {\n    const wrapper = mount(Sthumbnail, {\n      props: {\n        alt: \"Product preview\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-thumbnail\");\n    expect(webComponent.attributes(\"alt\")).toBe(\"Product preview\");\n  });\n\n  it(\"passes size prop to the web component\", () => {\n    const wrapper = mount(Sthumbnail, {\n      props: {\n        size: \"large\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-thumbnail\");\n    expect(webComponent.attributes(\"size\")).toBe(\"large\");\n  });\n\n  it(\"passes src prop to the web component\", () => {\n    const wrapper = mount(Sthumbnail, {\n      props: {\n        src: \"https://example.com/image.jpg\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-thumbnail\");\n    expect(webComponent.attributes(\"src\")).toBe(\"https://example.com/image.jpg\");\n  });\n\n  it(\"emits error event\", async () => {\n    const wrapper = mount(Sthumbnail);\n    const webComponent = wrapper.find(\"s-thumbnail\");\n    \n    await webComponent.trigger(\"error\");\n    \n    expect(wrapper.emitted(\"error\")).toBeTruthy();\n  });\n\n  it(\"emits load event\", async () => {\n    const wrapper = mount(Sthumbnail);\n    const webComponent = wrapper.find(\"s-thumbnail\");\n    \n    await webComponent.trigger(\"load\");\n    \n    expect(wrapper.emitted(\"load\")).toBeTruthy();\n  });\n});"
}