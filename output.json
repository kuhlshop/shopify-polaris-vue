{
  "vueComponent": "<template>\n  <s-spinner\n    :accessibilityLabel=\"accessibilityLabel\"\n    :size=\"size\"\n  >\n    <slot />\n  </s-spinner>\n</template>\n\n<script setup lang=\"ts\">\n// Type definitions for union types\ntype SpinnerSize = \"base\" | \"large\" | \"large-100\";\n\n// Props interface\ninterface Props {\n  accessibilityLabel?: string;\n  size?: SpinnerSize;\n}\n\ndefineProps<Props>();\n</script>",
  "testFile": "import { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\nimport Sspinner from \"../index.vue\";\n\ndescribe(\"Sspinner\", () => {\n  it(\"renders properly\", () => {\n    const wrapper = mount(Sspinner, {\n      slots: {\n        default: \"Test Content\"\n      }\n    });\n    expect(wrapper.text()).toContain(\"Test Content\");\n  });\n\n  it(\"passes props to the web component\", async () => {\n    const wrapper = mount(Sspinner, {\n      props: {\n        accessibilityLabel: \"Loading content\",\n        size: \"large\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-spinner\");\n    expect(webComponent.exists()).toBe(true);\n  });\n\n  it(\"passes accessibilityLabel prop correctly\", async () => {\n    const wrapper = mount(Sspinner, {\n      props: {\n        accessibilityLabel: \"Loading products\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-spinner\");\n    expect(webComponent.attributes(\"accessibilitylabel\")).toBe(\"Loading products\");\n  });\n\n  it(\"passes size prop correctly\", async () => {\n    const wrapper = mount(Sspinner, {\n      props: {\n        size: \"large-100\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-spinner\");\n    expect(webComponent.attributes(\"size\")).toBe(\"large-100\");\n  });\n\n  it(\"uses default size when not specified\", async () => {\n    const wrapper = mount(Sspinner);\n    \n    const webComponent = wrapper.find(\"s-spinner\");\n    expect(webComponent.exists()).toBe(true);\n  });\n});\n"
}