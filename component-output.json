{
  "vueComponent": "<template>\n  <s-buttongroup\n    :accessibility-label=\"accessibilityLabel\"\n    :gap=\"gap\"\n  >\n    <slot name=\"primary-action\" />\n    <slot name=\"secondary-actions\" />\n    <slot />\n  </s-buttongroup>\n</template>\n\n<script setup lang=\"ts\">\ntype Gap = \"base\" | \"none\";\n\ninterface Props {\n  accessibilityLabel?: string;\n  gap?: Gap;\n}\n\ndefineProps<Props>();\n</script>\n",
  "testFile": "import { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\nimport Sbuttongroup from \"../index.vue\";\n\ndescribe(\"Sbuttongroup\", () => {\n  it(\"renders properly\", () => {\n    const wrapper = mount(Sbuttongroup, {\n      slots: {\n        default: \"Test Content\"\n      }\n    });\n    expect(wrapper.text()).toContain(\"Test Content\");\n  });\n\n  it(\"passes props to the web component\", async () => {\n    const wrapper = mount(Sbuttongroup, {\n      props: {\n        accessibilityLabel: \"Button group label\",\n        gap: \"base\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-buttongroup\");\n    expect(webComponent.exists()).toBe(true);\n  });\n\n  it(\"renders with gap set to none\", () => {\n    const wrapper = mount(Sbuttongroup, {\n      props: {\n        gap: \"none\"\n      }\n    });\n    \n    const webComponent = wrapper.find(\"s-buttongroup\");\n    expect(webComponent.exists()).toBe(true);\n  });\n\n  it(\"renders named slots correctly\", () => {\n    const wrapper = mount(Sbuttongroup, {\n      slots: {\n        \"primary-action\": \"<button>Save</button>\",\n        \"secondary-actions\": \"<button>Cancel</button>\"\n      }\n    });\n    \n    expect(wrapper.html()).toContain(\"<button>Save</button>\");\n    expect(wrapper.html()).toContain(\"<button>Cancel</button>\");\n  });\n});\n"
}